name: ci

on: push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    env:
      PYVER: ${{ matrix.python-version }}
      PACKAGE: PACKAGE_NAME_HERE  # Replace with the name of your package

    steps:
    - uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        channel-priority: true
        environment-file: devtools/conda-envs/test_env.yaml
        auto-activate-base: false

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info --all
        conda list

    - name: Install OpenFF stack and OpenEye on Python 3.6+
      if: ${{ matrix.python-version != 3.5 && matrix.python-version != 2.7}}
      shell: bash -l {0}
      run: |
        conda install openforcefield -c conda-forge -c omnia -y
        conda install openeye-toolkits -c openeye -y

    - name: Install Work Queue
      shell: bash -l {0}
      run: |
        wget https://raw.githubusercontent.com/leeping/forcebalance/master/tools/install-cctools.sh
        bash install-cctools.sh
        echo "Checking for Work Queue import; if successful, no message will be printed"
        python -c "import work_queue"
        export PATH="$HOME/opt/cctools/current/bin:$PATH"

    - name: Install GROMACS:
      shell: bash -l {0}
      run: |
        # This will not install double precision, may be better to directly build
        conda install gromacs -c bioconda

    # TODO: Install tinker

    - name: Extract data archives
      run: |
        cd studies/001_water_tutorial
        tar xvjf targets.tar.bz2
        # cd -

    - name: Install package
      shell: bash -l {0}
      run: |
        # python setup.py install
        python -m pip install --no-deps .
    - name: Run tests
      shell: bash -l {0}
      run: |
        ForceBalance very_simple.in
        pytest --cov=forcebalance --cov-config=setup.cfg --durations=0 --cov-report=xml

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

