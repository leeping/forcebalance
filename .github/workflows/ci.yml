name: ci

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macOS-latest
          - ubuntu-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8
    env:
      CI_OS: ${{ matrix.os }}
      PYVER: ${{ matrix.python-version }}
      PACKAGE: forcebalance

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: test
        channel-priority: true
        environment-file: devtools/conda-envs/test_env.yaml
        auto-activate-base: false

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Environment Information
      shell: bash -l {0}
      run: |
        conda info --all
        conda list

    - name: Install OpenFF stack and OpenEye on Python 3.6+
      if: ${{ matrix.python-version != 2.7}}
      shell: bash -l {0}
      run: |
        conda install openff-toolkit -c conda-forge -y

#       Need to replace ndcctools with this block
#    - name: Install Work Queue
#      shell: bash -l {0}
#      run: |
#        wget https://raw.githubusercontent.com/leeping/forcebalance/master/tools/install-cctools.sh
#        bash install-cctools.sh
#        echo "Checking for Work Queue import; if successful, no message will be printed"
#        python -c "import work_queue"
#        export PATH="$GITHUB_WORKSPACE/opt/cctools/current/bin:$PATH"

    - name: Install GROMACS
      shell: bash -l {0}
      run: |
        # This will not install double precision, needs to be replaced with a fresh build
        conda install gromacs -c bioconda -c conda-forge -y

    - name: Install Tinker
      run: |
        if [[ "$CI_OS" == 'ubuntu-latest' ]]; then
          wget https://dasher.wustl.edu/tinker/downloads/bin-linux-8.8.3.tar.gz -O tinker.tar.gz
        fi
        if [[ "$CI_OS" == 'macOS-latest' ]]; then
          wget https://dasher.wustl.edu/tinker/downloads/bin-macos-8.8.3.tar.gz -O tinker.tar.gz
        fi
        tar xvzf tinker.tar.gz &> untar.log

        mkdir -p $GITHUB_WORKSPACE/opt/tinker/8.8.3
        if [[ "$CI_OS" == 'ubuntu-latest' ]]; then
          mv bin-linux $GITHUB_WORKSPACE/opt/tinker/8.8.3/bin
        fi
        if [[ "$CI_OS" == 'macOS-latest' ]]; then
          mv bin-macos $GITHUB_WORKSPACE/opt/tinker/8.8.3/bin
        fi

        echo "appending to GITHUB_PATH ... "
        echo "$GITHUB_WORKSPACE/opt/tinker/8.8.3/bin" >> $GITHUB_PATH
        echo "successfully appended to GITHUB_PATH"

    - name: Extract data archives
      run: |
        cd studies/001_water_tutorial
        tar xvjf targets.tar.bz2
        cd ../../

    - name: Install package
      shell: bash -l {0}
      run: |
        # python setup.py install
        python -m pip install --no-deps .
        python -c "import forcebalance; print(forcebalance.__version__)"

    - name: Run water study
      shell: bash -l {0}
      run: |
        cd studies/001_water_tutorial
        tar xvjf targets.tar.bz2
        ForceBalance very_simple.in
        cd ../../

    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=forcebalance --cov-config=setup.cfg --durations=0 --cov-report=xml

    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
